name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 bandit
    
    - name: Run linting
      run: |
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run security checks
      run: |
        bandit -r . -f json -o bandit-report.json || true
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: True
        RAILWAY: false
      run: |
        python manage.py check --deploy
        python manage.py test --verbosity=2
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          bandit-report.json
          htmlcov/
    
    - name: Build static files
      env:
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: False
        RAILWAY: false
      run: |
        python manage.py collectstatic --noinput
